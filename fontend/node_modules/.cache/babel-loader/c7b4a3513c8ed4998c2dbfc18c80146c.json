{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\IWS\\\\fontend\\\\src\\\\component\\\\CreCom.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass CreCom extends Component {\n  constructor(props) {\n    super(props); // this.onHandleInput = this.onHandleInput.bind(this);\n    // this.onSubmit = this.onSubmit.bind(this);\n\n    this.onHandleInput = e => {\n      const isCheckbox = e.target.type === \"checkbox\";\n      this.setState({\n        [e.target.name]: isCheckbox ? e.target.checked : e.target.value\n      });\n      console.log(this.state);\n    };\n\n    this.validate = () => {\n      let nameError = \"\";\n      let comError = \"\"; // let passwordError = \"\";\n\n      if (!this.state.username) {\n        nameError = \"Username cannot be blank\";\n      }\n\n      if (!this.state.username) {\n        comError = \"Comment cannot be blank\";\n      }\n\n      if (nameError || comError) {\n        this.setState({\n          nameError,\n          comError\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.onSubmit = e => {\n      const {\n        news_id,\n        username,\n        comment\n      } = this.state;\n      console.log(username);\n      const isValid = this.validate();\n\n      if (isValid) {\n        axios.post(`http://localhost:4000/news/${news_id}/comments`, {\n          username,\n          comment\n        }).then(result => {\n          this.props.history.push(`/news/${news_id}`);\n          this.setState({\n            news_id: this.props.news_id,\n            username: '',\n            comment: ''\n          });\n        }).catch(error => {\n          console.log(\"Error\" + error);\n        });\n      }\n    };\n\n    this.state = {\n      news_id: this.props.news_id,\n      username: '',\n      comment: '',\n      nameError: '',\n      comError: ''\n    };\n  }\n\n  render() {\n    const {\n      username,\n      comment\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card my-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, \"Leave a Comment:\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"form-control\",\n      placeholder: \"UserName\",\n      rows: 1,\n      value: username,\n      name: \"username\",\n      onChange: this.onHandleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"form-control\",\n      placeholder: \"Comment\",\n      rows: 3,\n      value: comment,\n      name: \"comment\",\n      onChange: this.onHandleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      style: {\n        backgroundColor: \"#585858\"\n      },\n      onClick: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }\n    }, \"Submit\")))));\n  }\n\n}\n\nexport default CreCom;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/IWS/fontend/src/component/CreCom.js"],"names":["React","Component","axios","CreCom","constructor","props","onHandleInput","e","isCheckbox","target","type","setState","name","checked","value","console","log","state","validate","nameError","comError","username","onSubmit","news_id","comment","isValid","post","then","result","history","push","catch","error","render","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nclass CreCom extends Component {\r\n  \r\n    constructor(props) {\r\n        super(props);\r\n        // this.onHandleInput = this.onHandleInput.bind(this);\r\n        // this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state={\r\n          news_id: this.props.news_id,\r\n          username: '',\r\n          comment: '',\r\n          nameError: '',\r\n          comError: ''\r\n        }\r\n    }\r\n    onHandleInput = (e) => {\r\n      const isCheckbox=e.target.type === \"checkbox\"\r\n      this.setState({\r\n        [e.target.name]: isCheckbox ? e.target.checked : e.target.value \r\n      });\r\n      console.log(this.state);\r\n    };\r\n    validate = () => {\r\n      let nameError = \"\";\r\n      let comError = \"\";\r\n      // let passwordError = \"\";\r\n  \r\n      if (!this.state.username) {\r\n        nameError = \"Username cannot be blank\";\r\n      }\r\n  \r\n      if (!this.state.username) {\r\n        comError = \"Comment cannot be blank\";\r\n      }\r\n  \r\n      if (nameError || comError) {\r\n        this.setState({ nameError, comError });\r\n        return false;\r\n      }\r\n  \r\n      return true;\r\n    };\r\n    onSubmit = (e) => {\r\n      const {news_id, username, comment } = this.state;\r\n      console.log(username);\r\n      const isValid = this.validate();\r\n      if(isValid) {\r\n        axios.post(`http://localhost:4000/news/${news_id}/comments`, { username, comment })\r\n        .then((result) => {\r\n          this.props.history.push(`/news/${news_id}`);\r\n          this.setState({\r\n            news_id: this.props.news_id,\r\n            username: '',\r\n            comment: '',\r\n          })\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error\" + error)\r\n        })\r\n      }\r\n    }\r\n    render() {\r\n      const {username,comment } = this.state;\r\n        return (\r\n            <div>\r\n                {/* Comments Form */}\r\n            <div className=\"card my-4\">\r\n              <h5 className=\"card-header\">Leave a Comment:</h5>\r\n              <div className=\"card-body\">\r\n                <form onSubmit = {this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <textarea className=\"form-control\"  \r\n                              placeholder=\"UserName\" rows={1}\r\n                              value={username}\r\n                              name=\"username\"\r\n                              onChange={this.onHandleInput} />\r\n                    <p></p>\r\n                    <textarea className=\"form-control\" \r\n                              placeholder=\"Comment\" rows={3} \r\n                              value={comment}\r\n                              name=\"comment\"\r\n                              onChange={this.onHandleInput} />\r\n                     </div>\r\n                  <button type=\"submit\" className=\"btn btn-primary\" style={{backgroundColor: \"#585858\"}} onClick={this.onSubmit}>Submit</button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreCom;"]},"metadata":{},"sourceType":"module"}